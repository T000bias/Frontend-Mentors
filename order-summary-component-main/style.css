/* Step 1 Setting style values as custom values. */

/* All CSS variables should be put inside the root element */

:root {
    /* neutral colors */
    --clr-neutral-100: hsl(0 0% 100%);

    /* Very pale blue */
    --clr-neutral-200: hsl(225, 100%, 98%);

    /* Desatruated blue */
    --clr-neutral-400: hsla(223, 23%, 55%, 1);

    /* Dark blue */
    --clr-neutral-800: hsl(223, 47%, 23%);


    /* Primary Colors */
    --clr-primary-200: hsl(225, 100%, 94%);

    --clr-primary-300: hsla(245, 83%, 68%, 1);

    /* Bright Blue */
    --clr-primary-400: hsl(245, 75%, 52%);

    /* Font Sizes */
    --fs-700: 1.75rem;
    --fs-400: 1rem;
    --fs-300: 0.875rem;

    /* font weights */
    --fw-500: 500;
    --fw-700: 700;
    --fw-900: 900;

}

/* Step 2 Add a CSS Reset */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* End of CSS Reset */

/* final step */

/* Mobile layout */
@media (max-width: 375px) {
  body {
    background-image: url(images/pattern-background-mobile.svg);
    background-repeat: repeat-x;
  }
}



/* Step 3 */
body {
    /* Setting up inheritance */
    font-family: 'Red Hat', sans-serif;
    font-size: var(--fs-400);
    font-weight: var(--fw-400);
    color: var(--clr-neutral-400);
    background: var(--clr-primary-200);
    line-height:1.6;
    /* For demo only */
    display: grid;
    min-height: 100vh;
    place-items: center;
    background-image: url(images/pattern-background-desktop.svg);
    background-repeat: repeat-x;
}

/* Step 4 */
h1,h2,h3 {
    line-height: 1.1;
}

/* Step 5 */
h2 {
    font-size: var(--fs-700);
    color: var(--clr-neutral-800);
    font-weight: var(--fw-900);
}

/* Composition: */
/* Composition deals with the layout of the css. (Spacing issues, flex issues) */

.grid-flow {
    display: grid;
    gap: var(--gap, 1rem); 

}

.flex-row {
  display: flex;
  gap: var(--gap, 1rem);  

}

/* Utility */
.padding-48 {

    /* 48 / 16 = 3rem */
    padding: 3rem; 
}

.padding-24 {
    padding: 1.5rem;
}

.text-neutral-800 {
    color: var(--clr-neutral-800);
}

.text-neutral-400 {
    color: var(--clr-neutral-400);
}

.bg-neutral-100 {
    background-color: var(--clr-neutral-100);
}

.bg-neutral-200 {
    background-color: var(--clr-neutral-200)
}

.text-align-left {
    text-align: left;
}

.text-align-center {
    text-align: center;
}

.text-align-right {
    text-align: end;
}

.fw-bold {
    font-weight: var(--fw-700);
}

.fw-black {
    font-weight: var(--fw-900);
}

.br-1 {
  border-radius: 0.5rem;
}

.br-2 {
  border-radius: 1rem;
}

a,
.link {
  cursor: pointer;
  background: transparent;
  border: 0;
  color: var(--clr-primary-400);
  text-decoration: underline;
  font-weight: var(--fw-700);
}

a:hover,
a:focus,
.link:hover,
.link:focus {
  color: var(--clr-primary-300);
  text-decoration: none;
}


.push-right {
  margin-left:auto;
}
/* End of utility classes */



/* modifier classes */
.button[data-type="primary"] {
  color: var(--clr-neutral-100);
  background-color: var(--clr-primary-400);
}


.button[data-type="naked"] {
  color: var(--clr-neutral-400);
  padding: 0;
}

/* end of modifier classes */

/* Exception Classes */


.link {

}
/* End of exeception classes */




/* Block Classes */
.card {
    overflow: hidden;
    max-width: 450px;
}

.button {
  cursor: pointer;
  text-decoration: none;
  border: 0;
  border-radius: 0.5rem;
  color: var(--clr-neutral-100);
  font-weight: var(--fw-700);
  background:transparent;
  padding: 1em 2em;
}

.button[data-type="primary"]:hover,
.button[data-type="primary"]:focus {
  background-color: var(--clr-primary-300);
}

.button[data-type="naked"]:hover,
.button[data-type="naked"]:focus {
  color: var(--clr-neutral-800);
}



/* End of block classes */